<!--
  -- DON'T EDIT THIS FILE, MANAGED BY SALTSTACK
  --

  Wazuh - Manager - Default configuration for debian 9.5
  More info at: https://documentation.wazuh.com
  Mailing list: https://groups.google.com/forum/#!forum/wazuh
-->

<ossec_config>
  <global>
    <jsonout_output>{{ ossec_config.global.email_notification|default('no') }}</jsonout_output>
    <alerts_log>{{ ossec_config.global.alerts_log|default('yes') }}</alerts_log>
    <logall>{{ ossec_config.global.logall|default('no') }}</logall>
    <logall_json>{{ ossec_config.global.logall_json|default('no') }}</logall_json>
    <email_notification>{{ ossec_config.global.email_notification|default('no') }}</email_notification>
    <smtp_server>{{ ossec_config.global.smtp_server|default('localhost') }}</smtp_server>
    <email_from>{{ ossec_config.global.email_from|default('') }}</email_from>
    <email_to>{{ ossec_config.global.email_to|default('') }}</email_to>
    {%- if 'email_reply_to' in ossec_config.global %}<email_reply_to>{{ ossec_config.global.email_reply_to }}</email_reply_to>{% endif %}
    {%- if 'helo_server' in ossec_config.global %}<helo_server>{{ ossec_config.global.helo_server }}</helo_server>{% endif %}
    {%- if 'email_idsname' in ossec_config.global %}<email_idsname>{{ ossec_config.global.email_idsname }}</email_idsname>{% endif %}
    {%- if 'email_log_source' in ossec_config.global %}<email_log_source>{{ ossec_config.global.email_log_source }}</email_log_source>{% endif %}
    <email_maxperhour>{{ ossec_config.global.email_maxperhour|default(12) }}</email_maxperhour>
    <queue_size>{{ ossec_config.global.queue_size|default(131072) }}</queue_size>
    {%- if 'stats' in ossec_config.global %}<stats>{{ ossec_config.global.stats }}</stats>{% endif %}
    {%- if 'memory_size' in ossec_config.global %}<memory_size>{{ ossec_config.global.memory_size }}</memory_size>{% endif %}

    {%- if 'white_list' in ossec_config.global %}
    {%- for wl in ossec_config.global.white_list %}
    {%- set ip = wl.split('/')[0] %}
    <white_list>{{ ip }}</white_list>
    {%- endfor %}
    {%- endif %}
  </global>

  {%- if 'integration' in ossec_config %}
  {%- for integration in ossec_config.integration %}
  <integration>
    {%- for k,v in integration.items() %}
    <{{ k }}>{{ v }}</{{ k }}>
    {%- endfor %}
  </integration>
  {%- endfor %}
  {%- endif %}

  <alerts>
    <log_alert_level>{{ ossec_config.alerts.log_alert_level|default(3) }}</log_alert_level>
    <email_alert_level>{{ ossec_config.alerts.email_alert_level|default(12) }}</email_alert_level>
    {%- if 'use_geoip' in ossec_config.alerts %}<use_geoip>{{ ossec_config.alerts.use_geoip }}</use_geoip>{% endif %}
  </alerts>

  <!-- Choose between "plain", "json", or "plain,json" for the format of internal logs -->
  <logging>
    <log_format>{{ ossec_config.logging.log_format|default('plain') }}</log_format>
  </logging>

  <remote>
    <connection>{{ ossec_config.remote.connection|default('secure') }}</connection>
    <port>{{ ossec_config.remote.port|default(1514) }}</port>
    <protocol>{{ ossec_config.remote.protocol|default('udp') }}</protocol>
    <queue_size>{{ ossec_config.remote.queue_size|default(131072) }}</queue_size>
  </remote>

  <!-- Policy monitoring -->
  <rootcheck>
    <disabled>{{ ossec_config.rootcheck.disable|default('no') }}</disabled>
    <check_unixaudit>{{ ossec_config.rootcheck.check_unixaudit|default('yes') }}</check_unixaudit>
    <check_files>{{ ossec_config.rootcheck.check_files|default('yes') }}</check_files>
    <check_trojans>{{ ossec_config.rootcheck.check_trojans|default('yes') }}</check_trojans>
    <check_dev>{{ ossec_config.rootcheck.check_dev|default('yes') }}</check_dev>
    <check_sys>{{ ossec_config.rootcheck.check_sys|default('yes') }}</check_sys>
    <check_pids>{{ ossec_config.rootcheck.check_pids|default('yes') }}</check_pids>
    <check_ports>{{ ossec_config.rootcheck.check_ports|default('yes') }}</check_ports>
    <check_if>{{ ossec_config.rootcheck.check_if|default('yes') }}</check_if>

    <!-- Frequency that rootcheck is executed - every 12 hours -->
    <frequency>{{ ossec_config.rootcheck.frequency|default(43200) }}</frequency>

    <rootkit_files>{{ ossec_config.rootcheck.rootkit_files|default('') }}</rootkit_files>
    <rootkit_trojans>{{ ossec_config.rootcheck.rootkit_trojans|default('') }}</rootkit_trojans>

    {% for audit in ossec_config.rootcheck.system_audit %}
    <system_audit>{{ audit }}</system_audit>
    {%- endfor %}

    <skip_nfs>yes</skip_nfs>
  </rootcheck>

  <wodle name="open-scap">
    <disabled>yes</disabled>
    <timeout>1800</timeout>
    <interval>1d</interval>
    <scan-on-start>yes</scan-on-start>
  </wodle>

  <wodle name="cis-cat">
    <disabled>yes</disabled>
    <timeout>1800</timeout>
    <interval>1d</interval>
    <scan-on-start>yes</scan-on-start>

    <java_path>wodles/java</java_path>
    <ciscat_path>wodles/ciscat</ciscat_path>
  </wodle>

  <!-- Osquery integration -->
  <wodle name="osquery">
    <disabled>yes</disabled>
    <run_daemon>yes</run_daemon>
    <log_path>/var/log/osquery/osqueryd.results.log</log_path>
    <config_path>/etc/osquery/osquery.conf</config_path>
    <add_labels>yes</add_labels>
  </wodle>

  <!-- System inventory -->
  <wodle name="syscollector">
    <disabled>no</disabled>
    <interval>1h</interval>
    <scan_on_start>yes</scan_on_start>
    <hardware>yes</hardware>
    <os>yes</os>
    <network>yes</network>
    <packages>yes</packages>
    <ports all="no">yes</ports>
    <processes>yes</processes>
  </wodle>

  <wodle name="vulnerability-detector">
    <disabled>yes</disabled>
    <interval>1m</interval>
    <run_on_start>yes</run_on_start>
    <feed name="ubuntu-18">
      <disabled>yes</disabled>
      <update_interval>1h</update_interval>
    </feed>
    <feed name="redhat-7">
      <disabled>yes</disabled>
      <update_interval>1h</update_interval>
    </feed>
    <feed name="debian-9">
      <disabled>yes</disabled>
      <update_interval>1h</update_interval>
    </feed>
  </wodle>

  <!-- File integrity monitoring -->
  <syscheck>
    <disabled>no</disabled>

    <!-- Frequency that syscheck is executed default every 12 hours -->
    <frequency>43200</frequency>

    <scan_on_start>yes</scan_on_start>

    <!-- Generate alert when new file detected -->
    <alert_new_files>yes</alert_new_files>

    <!-- Don't ignore files that change more than 'frequency' times -->
    <auto_ignore frequency="10" timeframe="3600">no</auto_ignore>

    <!-- Directories to check  (perform all possible verifications) -->
    <directories check_all="yes">/etc,/usr/bin,/usr/sbin</directories>
    <directories check_all="yes">/bin,/sbin,/boot</directories>

    <!-- Files/directories to ignore -->
    <ignore>/etc/mtab</ignore>
    <ignore>/etc/hosts.deny</ignore>
    <ignore>/etc/mail/statistics</ignore>
    <ignore>/etc/random-seed</ignore>
    <ignore>/etc/random.seed</ignore>
    <ignore>/etc/adjtime</ignore>
    <ignore>/etc/httpd/logs</ignore>
    <ignore>/etc/utmpx</ignore>
    <ignore>/etc/wtmpx</ignore>
    <ignore>/etc/cups/certs</ignore>
    <ignore>/etc/dumpdates</ignore>
    <ignore>/etc/svc/volatile</ignore>
    <ignore>/sys/kernel/security</ignore>
    <ignore>/sys/kernel/debug</ignore>

    <!-- Check the file, but never compute the diff -->
    <nodiff>/etc/ssl/private.key</nodiff>

    <skip_nfs>yes</skip_nfs>

    <!-- Remove not monitored files -->
    <remove_old_diff>yes</remove_old_diff>

    <!-- Allow the system to restart Auditd after installing the plugin -->
    <restart_audit>yes</restart_audit>
  </syscheck>

  <!-- Active response -->
  <command>
    <name>disable-account</name>
    <executable>disable-account.sh</executable>
    <expect>user</expect>
    <timeout_allowed>yes</timeout_allowed>
  </command>

  <command>
    <name>restart-ossec</name>
    <executable>restart-ossec.sh</executable>
    <expect></expect>
  </command>

  <command>
    <name>firewall-drop</name>
    <executable>firewall-drop.sh</executable>
    <expect>srcip</expect>
    <timeout_allowed>yes</timeout_allowed>
  </command>

  <command>
    <name>host-deny</name>
    <executable>host-deny.sh</executable>
    <expect>srcip</expect>
    <timeout_allowed>yes</timeout_allowed>
  </command>

  <command>
    <name>route-null</name>
    <executable>route-null.sh</executable>
    <expect>srcip</expect>
    <timeout_allowed>yes</timeout_allowed>
  </command>

  <command>
    <name>win_route-null</name>
    <executable>route-null.cmd</executable>
    <expect>srcip</expect>
    <timeout_allowed>yes</timeout_allowed>
  </command>

  <command>
    <name>win_route-null-2012</name>
    <executable>route-null-2012.cmd</executable>
    <expect>srcip</expect>
    <timeout_allowed>yes</timeout_allowed>
  </command>

  <command>
    <name>netsh</name>
    <executable>netsh.cmd</executable>
    <expect>srcip</expect>
    <timeout_allowed>yes</timeout_allowed>
  </command>

  <command>
    <name>netsh-win-2016</name>
    <executable>netsh-win-2016.cmd</executable>
    <expect>srcip</expect>
    <timeout_allowed>yes</timeout_allowed>
  </command>

  {%- if 'command' in ossec_config%}
  {% for command in ossec_config.command %}
  <command>
    <name>{{ command['name'] }}</name>
    <executable>{{ command['executable'] }}</executable>
    {% if 'expect' in command %}<expect>{{ command['expect'] }}</expect>{% endif %}
    {% if 'timeout_allowed' in command %}<timeout_allowed>{{ command['timeout_allowed'] }}</timeout_allowed>{% endif %}
    {% if 'extra_args' in command %}<extra_args>{{ command['extra_args'] }}</extra_args>{% endif %}
  </command>
  {%- endfor %}
  {%- endif %}

  <!--
  <active-response>
    active-response options here
  </active-response>
  -->

  {%- if 'active_response' in ossec_config%}
  {% for active_response in ossec_config.active_response %}
  <active-response>
    <disabled>{{ active_response['disabled'] }}</disabled>
    <command>{{ active_response['command'] }}</command>
    <location>{{ active_response['location'] }}</location>
    {%- if 'agent_id' in active_response %}
    <agent_id>{{ active_response['agent_id'] }}</agent_id>
    {%- endif %}
    {%- if 'level' in active_response %}
    <level>{{ active_response['level'] }}</level>
    {%- endif %}
    {%- if 'timeout' in active_response %}
    <timeout>{{ active_response['timeout'] }}</timeout>
    {%- endif %}
    {%- if 'repeated_offenders' in active_response %}
    <repeated_offenders>{{ active_response['repeated_offenders'] }}</repeated_offenders>
    {%- endif %}
    {%- if 'rules_group' in active_response %}
    <rules_group>{{ active_response['rules_group'] }}</rules_group>
    {%- endif %}
  </active-response>

  {%- endfor %}
  {%- endif %}

  <!-- Log analysis -->
  <localfile>
    <log_format>command</log_format>
    <command>df -P</command>
    <frequency>360</frequency>
  </localfile>

  <localfile>
    <log_format>full_command</log_format>
    <command>netstat -tulpn | sed 's/\([[:alnum:]]\+\)\ \+[[:digit:]]\+\ \+[[:digit:]]\+\ \+\(.*\):\([[:digit:]]*\)\ \+\([0-9\.\:\*]\+\).\+\ \([[:digit:]]*\/[[:alnum:]\-]*\).*/\1 \2 == \3 == \4 \5/' | sort -k 4 -g | sed 's/ == \(.*\) ==/:\1/' | sed 1,2d</command>
    <alias>netstat listening ports</alias>
    <frequency>360</frequency>
  </localfile>

  <localfile>
    <log_format>full_command</log_format>
    <command>last -n 20</command>
    <frequency>360</frequency>
  </localfile>

  <ruleset>
    <!-- Default ruleset -->
    <decoder_dir>ruleset/decoders</decoder_dir>
    <rule_dir>ruleset/rules</rule_dir>
    <rule_exclude>0215-policy_rules.xml</rule_exclude>
    <list>etc/lists/audit-keys</list>
    <list>etc/lists/amazon/aws-sources</list>
    <list>etc/lists/amazon/aws-eventnames</list>

    <!-- User-defined ruleset -->
    <decoder_dir>etc/decoders</decoder_dir>
    <rule_dir>etc/rules</rule_dir>
  </ruleset>

  <!-- Configuration for ossec-authd
    To enable this service, run:
    ossec-control enable auth
  -->
  <auth>
    <disabled>no</disabled>
    <port>1515</port>
    <use_source_ip>yes</use_source_ip>
    <force_insert>yes</force_insert>
    <force_time>0</force_time>
    <purge>yes</purge>
    <use_password>no</use_password>
    <limit_maxagents>yes</limit_maxagents>
    <ciphers>HIGH:!ADH:!EXP:!MD5:!RC4:!3DES:!CAMELLIA:@STRENGTH</ciphers>
    <!-- <ssl_agent_ca></ssl_agent_ca> -->
    <ssl_verify_host>no</ssl_verify_host>
    <ssl_manager_cert>/var/ossec/etc/sslmanager.cert</ssl_manager_cert>
    <ssl_manager_key>/var/ossec/etc/sslmanager.key</ssl_manager_key>
    <ssl_auto_negotiate>no</ssl_auto_negotiate>
  </auth>

  <cluster>
    <name>wazuh</name>
    <node_name>node01</node_name>
    <node_type>master</node_type>
    <key></key>
    <port>1516</port>
    <bind_addr>0.0.0.0</bind_addr>
    <nodes>
        <node>NODE_IP</node>
    </nodes>
    <hidden>no</hidden>
    <disabled>yes</disabled>
  </cluster>

  <localfile>
    <log_format>apache</log_format>
    <location>/var/log/nginx/access.log</location>
  </localfile>

  <localfile>
    <log_format>apache</log_format>
    <location>/var/log/nginx/error.log</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/ossec/logs/active-responses.log</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/messages</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/auth.log</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/syslog</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/mail.info</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/dpkg.log</location>
  </localfile>

  <localfile>
    <log_format>syslog</log_format>
    <location>/var/log/kern.log</location>
  </localfile>

</ossec_config>
