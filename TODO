# ALL is migrated to ORA

Saltstack:
  ☐ Salt the salt :) @high

Salt-cloud:
  post-action:
    ☐ add DNS in OVH => use the external_pillar to fill DNS if missing entries
    ☐ Mount IPv6 => use the external_pillar "all_ips" and monut missing ip

Monitoring:
  ☐ filebeat: send log via filebeat to ELK (nginx, ...) @high
  ☐ kibana: create dashboard

Archive:
  ✔ Migrate from VPS to better server (more cpu)  @low @done(20-04-01 10:47) @project(Saltstack)
  ✘ webhook sur commit pour chmod + git pull + chmod back + yarn install/build + reload gunicorn @cancelled(20-01-24 15:48) @project(KS001.moviecat)
  ✔ manage 401 properly @done(20-01-24 10:50) @project(KS001.moviecat.front)
  ✔ movie @done(20-01-22 18:47) @project(KS001.moviecat.api)
  ✔ gestion de l'edition @done(20-01-22 18:47) @project(KS001.moviecat.api)
  ✔ movies @done(20-01-22 15:55) @project(KS001.moviecat.api)
  ✔ gestion des poster @done(20-01-22 15:55) @project(KS001.moviecat.api)
  ✔ listing @done(20-01-22 15:54) @project(KS001.moviecat.front)
  ✔ details @done(20-01-22 18:46) @project(KS001.moviecat.front)
  ✔ login @done(20-01-20 13:29) @project(KS001.moviecat.front)
  ✔ ajout @done(20-01-22 15:54) @project(KS001.moviecat.front)
  ✔ gestion decouverte par plusieurs moteur (allocine, imdb) @done(20-01-21 13:29) @project(KS001.moviecat.front)
    * utilisation de : curl "http://www.omdbapi.com/?apikey=bce217fe&t=Avatar"
  ✔ gestion des poster (modification, import) @done(20-01-22 15:54) @project(KS001.moviecat.front)
  ✔ edition (add, laisser le post ecraser un film existant en back) @done(20-01-22 18:46) @project(KS001.moviecat.front)
  ✔ deletion @done(20-01-22 18:46) @project(KS001.moviecat.front)
  ✔ actors @done(20-01-15 12:21) @project(KS001.moviecat.api)
  ✔ actor @done(20-01-15 12:21) @project(KS001.moviecat.api)
  ✔ realisator @done(20-01-15 12:21) @project(KS001.moviecat.api)
  ✔ realisators @done(20-01-15 12:21) @project(KS001.moviecat.api)
  ✔ recherche @done(20-01-15 12:20) @project(KS001.moviecat.api)
  ✔ rercherche @done(20-01-15 12:20) @project(KS001.moviecat.front)
  ✔ ajouter le depot yarn @done(20-01-10 17:54) @project(KS001.moviecat)
  ✔ install de vue-cli aussi @done(20-01-10 17:54) @project(KS001.moviecat)
  ✔ pagination: get number of movies @done(20-01-10 17:53) @project(KS001.moviecat.api)
  ✔ pagination: return movie list from pages (plus perPage => [(page-1)*10 + 1 , 10]) @done(20-01-10 17:53) @project(KS001.moviecat.api)
  ✔ pagination @done(20-01-10 17:54) @project(KS001.moviecat.front)
  ✔ automate installation @done(20-01-13 17:30) @project(Srv002.hassio)
    * deploy the file hassio_install.sh
    * install it if file are not present (creates: /usr/share/hassio/homeassistant/...)
    * run service hassio_supervisor
    * restore configuration (only if install is needed)
    * run homeassistant if necessary
  ✘ automate update @low @cancelled(20-01-13 17:30) @project(Srv002.hassio)
    * find a way to check for new version (API?)
    * launch the upgrade if found (API?)
  ✔ put local dns in salt @high @done(20-01-13 17:30) @project(Srv002.dns)
  ✔ automate install @done(19-12-12 20:31) @project(Warden)
  ✔ automate update @low @done(19-12-12 20:31) @project(Warden)
  ✔ Find a way to auto-add host in bastion from salt @high @done(19-12-10 17:54) @project(Bastion)
  ✔ Add a key to admin from salt @done(19-12-10 17:54) @project(Bastion)
    `ssh -p 2222 admin@bastion.whyrl.fr host create -n {{ name }} --key salt --group ovh ssh://ludovic@{{name}}.whyrl.fr`
    using event + reactor or thorium
  ✔ Wigo : monitor backup, need fresh backup @project(Monitoring)
  ✔ Automate wigo probes deployment with salt @done(19-12-03 11:38) @project(Monitoring)
  ✔ Automate the first borg-init using the borgwrapper (peut etre facilité par sshfp) @done(19-12-02 14:06) @project(Backup management)
  ✔ Passer en sshfp @done(19-12-02 12:57) @project(SSH)
  ✔ test if the DNS sshfp field exist @done(19-12-02 12:56) @project(SSH)
  ✔ bring back the key to the salt server `ssh-keygen -r {{ grains['host'] }}` @done(19-12-02 12:56) @project(SSH)
  ✘ reactor on master that modify DNS on OVH + DNS on srv002 @cancelled(19-12-02 12:56) @project(SSH)
  ✔ Modify SSHD Configuration: http://shaarli.guiguishow.info/?QWcOtQ @done(19-12-02 12:57) @project(SSH)
  ✔ Wigo : Monitoring local des containers docker (pas de docker en exited) @done(19-11-30 14:56) @project(Monitoring)
  ✔ Find a way to restart docker on nftables reload @critical @done(19-11-29 17:21) @project(Docker)
  ✔ Add roles on /etc/salt/grains (done via *.map for salt-cloud) @done(19-11-21 09:52) @project(Salt Cloud.Pre-action)
  ✔ Add Ip in nftables pillar @done(19-11-28 14:53) @project(Salt Cloud.Post-acion)
  ✔ Find an event to catch (salt/auth ?) and get IP or use mine @done(19-11-28 10:44) @project(Salt Cloud.Post-acion)
  ✔ Use those informations to generate the host-ips.jinja @done(19-11-28 10:44) @project(Salt Cloud.Post-acion)
  ✔ Add thoses ip in Wigo too @done(19-11-28 14:53) @project(Salt Cloud.Post-acion)
  ✔ mount vrack @done(19-11-21 09:55) @project(Salt Cloud.Post-acion)
  ✔ Set a default password @done(19-11-21 09:55) @project(Salt Cloud.applying)
  ✔ Add sudoers.d rules for user @done(19-11-21 09:56) @project(Salt Cloud.applying)
  ✔ manage /etc/hosts @done(19-11-21 09:56) @project(Salt Cloud.applying)
  ✔ Use borgbackup @done(19-11-22 11:10) @project(Backup management)
  ✔ Two roles BackupServer and BackupAgent (= not BackupServer) @done(19-11-22 11:10) @project(Backup management)
  ✔ Use event to propagate key (when installing borg on client) @done(19-11-22 11:11) @project(Backup management)
  ✔ Use reactor to catch event and push the new key on borg server @done(19-11-22 11:11) @project(Backup management)
  ✔ Monitoring ext. des sitewebs (all, portainer/koel/grafana/etc...) @done(19-11-29 11:04) @project(Monitoring)
  ✔ * choice : free saas @done(19-11-29 11:04) => freshping.io @project(Monitoring)
  ✘ choice : my own ping / curl testing host on wazuh with wigo ? @cancelled(19-11-29 16:45) @project(Monitoring)
  ✔ Mettre sous salt la partie webhook @done(19-11-21 09:59) @project(Saltstack (vps001))
  ✔ Mettre en place l'auto-deploy par webhook pour le git salt @done(19-11-21 09:59) @project(Saltstack (vps001))
  ✔ Faire marcher le salt-lint sur github action (check) @done(19-11-21 09:59) @project(Saltstack (vps001))
